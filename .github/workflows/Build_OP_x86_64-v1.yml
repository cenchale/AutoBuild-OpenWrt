#=================================================
# Description: Build OpenWrt with GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# modifier: cenchale 
#=================================================

name: Build_x86_64-v1

on: 
  release:
    types: [published]

  push:
    branches: 
      - master
    paths:
      - 'x86_64-v1.config'

  #schedule:
  #  - cron: 0 8 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 检查文件
      uses: actions/checkout@master

    - name: Initialization environment 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code 下载固件源码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update & Install feeds  更新源码
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a

    - name: SSH connection to Actions SSH登陆配置
      env:
        SSH_ACTIONS: true    
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'
      
    - name: Import external feeds 安装额外插件
      working-directory: ./openwrt
      run: |
        git clone https://github.com/cenchale/lienol-openwrt-package package/lienol
        git clone https://github.com/tty228/luci-app-serverchan.git package/serverchan
        git clone https://github.com/vernesong/OpenClash.git package/openclash
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization 定制化内容
      env:
        CONFIG_FILE: 'x86_64-v1.config'
        KERNEL_FILE: 'x86_64kernel.config'
      run: |
        [ -e files ] && mv files openwrt/files        
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        [ -e $KERNEL_FILE ] && mv $KERNEL_FILE openwrt/target/linux/x86/64/config-4.19
        [ -e $KERNEL_FILE ] && mv $KERNEL_FILE openwrt/target/linux/x86/config-4.19
        chmod +x ./customize_x86_64.sh && ./customize_x86_64.sh
        cd openwrt && make defconfig
 
 #   - name: 测试上传
 #     working-directory: ./openwrt
 #     run: |
 #       chmod +x ./upload.sh && ./upload.sh
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile 多线程编译
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s


    - name: Single-thread compile 单线程编译
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
          
 #   - name: Build firmware 编译固件
 #     working-directory: ./openwrt
  #    run: |
  #      echo -e "$(nproc) thread build."
  #      make -j1 V=s
    #    make -j$(nproc) V=s
        
    - name: 上传固件
      run: |
          cd openwrt
          cp .config bin/targets/x86/64/configx64
          cp target/linux/x86/64/config-4.19 bin/targets/x86/64/configx64
          cp target/linux/x86/config-4.19 bin/targets/x86/64/configx86
          chmod +x ./upload.sh && ./upload.sh
      
    - name : Upload artifact  打包上传固件
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
